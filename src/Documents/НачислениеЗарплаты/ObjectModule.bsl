
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДополнительныеНачисления.Записывать = Истина;
	
	ПериодРегистрации = НачалоМесяца(Дата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	НачислениеЗарплатыОсновныеНачисления.Подразделение КАК Подразделение,
	|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаОкончания КАК ПериодДействияКонец,
	|	&ПериодРегистрации КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТ_Оклад
	|ИЗ
	|	Документ.НачислениеЗарплаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
	|ГДЕ
	|	НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|	И НачислениеЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчетаОклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Оклад.НомерСтроки КАК НомерСтроки,
	|	ВТ_Оклад.Сотрудник КАК Сотрудник,
	|	ВТ_Оклад.Подразделение КАК Подразделение,
	|	ВТ_Оклад.ВидРасчета КАК ВидРасчета,
	|	ВТ_Оклад.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВТ_Оклад.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ВТ_Оклад.ПериодРегистрации КАК ПериодРегистрации,
	|	МАКСИМУМ(ЗначенияОклада.Период) КАК ПериодМакс
	|ПОМЕСТИТЬ ВТ_ОкладСМаксПериодом
	|ИЗ
	|	ВТ_Оклад КАК ВТ_Оклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияОклада КАК ЗначенияОклада
	|		ПО ВТ_Оклад.Сотрудник = ЗначенияОклада.Сотрудник
	|			И ВТ_Оклад.ПериодДействияНачало = ЗначенияОклада.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Оклад.ВидРасчета,
	|	ВТ_Оклад.Сотрудник,
	|	ВТ_Оклад.ПериодРегистрации,
	|	ВТ_Оклад.ПериодДействияКонец,
	|	ВТ_Оклад.ПериодДействияНачало,
	|	ВТ_Оклад.Подразделение,
	|	ВТ_Оклад.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Оклад.НомерСтроки КАК НомерСтроки,
	|	ВТ_Оклад.Сотрудник КАК Сотрудник,
	|	ВТ_Оклад.Подразделение КАК Подразделение,
	|	ВТ_Оклад.ВидРасчета КАК ВидРасчета,
	|	ЗначенияОклада.Период КАК ПериодДействияНачало,
	|	ВТ_Оклад.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ВТ_Оклад.ПериодРегистрации КАК ПериодРегистрации,
	|	ЗначенияОклада.Оклад КАК Параметр
	|ИЗ
	|	ВТ_Оклад КАК ВТ_Оклад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияОклада КАК ЗначенияОклада
	|		ПО ВТ_Оклад.Сотрудник = ЗначенияОклада.Сотрудник
	|			И ВТ_Оклад.ПериодДействияНачало < ЗначенияОклада.Период
	|			И ВТ_Оклад.ПериодДействияКонец >= ЗначенияОклада.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОкладСМаксПериодом.НомерСтроки,
	|	ВТ_ОкладСМаксПериодом.Сотрудник,
	|	ВТ_ОкладСМаксПериодом.Подразделение,
	|	ВТ_ОкладСМаксПериодом.ВидРасчета,
	|	ВТ_ОкладСМаксПериодом.ПериодДействияНачало,
	|	ВТ_ОкладСМаксПериодом.ПериодДействияКонец,
	|	ВТ_ОкладСМаксПериодом.ПериодРегистрации,
	|	ЗначенияОклада.Оклад
	|ИЗ
	|	ВТ_ОкладСМаксПериодом КАК ВТ_ОкладСМаксПериодом
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияОклада КАК ЗначенияОклада
	|		ПО ВТ_ОкладСМаксПериодом.Сотрудник = ЗначенияОклада.Сотрудник
	|			И ВТ_ОкладСМаксПериодом.ПериодМакс = ЗначенияОклада.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействияНачало
	|ИТОГИ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаИтоги.Следующий() Цикл
		
		Движение = Неопределено;
		
		ЭтоСледующий = Ложь;
		
		Выборка = ВыборкаИтоги.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если ЭтоСледующий Тогда
				Движение.ПериодДействияКонец = Выборка.ПериодДействияНачало - 1;
			КонецЕсли;
			
			Движение = Движения.ОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			ЭтоСледующий = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	НачислениеЗарплатыДополнительныеНачисления.Подразделение КАК Подразделение,
		|	НачислениеЗарплатыДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	НачислениеЗарплатыДополнительныеНачисления.Параметр КАК Параметр
		|ИЗ
		|	Документ.НачислениеЗарплаты.ДополнительныеНачисления КАК НачислениеЗарплатыДополнительныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыДополнительныеНачисления.Ссылка = &Ссылка
		|	И НачислениеЗарплатыДополнительныеНачисления.ВидРасчета = &ВидРасчетаПремия";
	
	Запрос.УстановитьПараметр("ВидРасчетаПремия", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = ПериодРегистрации;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.БазовыйПериодНачало = ПериодРегистрации;
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
	КонецЦикла;
	
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.Параметр КАК Параметр,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЧасовПериодДействия, 0) КАК НормаЧасов,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЧасовФактическийПериодДействия, 0) КАК ФактЧасов
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &ВидРасчетаОклад) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого Движение Из Движения.ОсновныеНачисления Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			Движение.Результат = ?(Выборка.НормаЧасов = 0, 0, Выборка.Параметр / Выборка.НормаЧасов * Выборка.ФактЧасов);
		КонецЕсли;
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать(, Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.Параметр КАК Параметр,
		|	ЕСТЬNULL(ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК Оклад
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
		|			&Измерение,
		|			&Измерение,
		|			,
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &ВидРасчетаПремия) КАК ДополнительныеНачисленияБазаОсновныеНачисления";
	
	Запрос.УстановитьПараметр("ВидРасчетаПремия", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
	
	Измерение = Новый Массив;
	Измерение.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерение", Измерение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого Движение Из Движения.ДополнительныеНачисления Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			Движение.Результат = Выборка.Оклад * Выборка.Параметр / 100;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записать(, Истина);

КонецПроцедуры
